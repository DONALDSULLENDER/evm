#include <stdint.h>

typedef enum {
    STOP,
    ADD,
    MUL,
    SUB,
    DIV,
    SDIV,
    MOD,
    SMOD,
    ADDMOD,
    MULMOD,
    EXP,
    SIGNEXTEND,
    ASSERT_0x0c,
    ASSERT_0x0d,
    ASSERT_0x0e,
    ASSERT_0x0f,
    LT,
    GT,
    SLT,
    SGT,
    EQ,
    ISZERO,
    AND,
    OR,
    XOR,
    NOT,
    BYTE,
    ASSERT_0x1b,
    ASSERT_0x1c,
    ASSERT_0x1d,
    ASSERT_0x1e,
    ASSERT_0x1f,
    SHA3,
    ASSERT_0x21,
    ASSERT_0x22,
    ASSERT_0x23,
    ASSERT_0x24,
    ASSERT_0x25,
    ASSERT_0x26,
    ASSERT_0x27,
    ASSERT_0x28,
    ASSERT_0x29,
    ASSERT_0x2a,
    ASSERT_0x2b,
    ASSERT_0x2c,
    ASSERT_0x2d,
    ASSERT_0x2e,
    ASSERT_0x2f,
    ADDRESS,
    BALANCE,
    ORIGIN,
    CALLER,
    CALLVALUE,
    CALLDATALOAD,
    CALLDATASIZE,
    CALLDATACOPY,
    CODESIZE,
    CODECOPY,
    GASPRICE,
    EXTCODESIZE,
    EXTCODECOPY,
    RETURNDATASIZE,
    RETURNDATACOPY,
    ASSERT_0x3f,
    BLOCKHASH,
    COINBASE,
    TIMESTAMP,
    NUMBER,
    DIFFICULTY,
    GASLIMIT,
    ASSERT_0x46,
    ASSERT_0x47,
    ASSERT_0x48,
    ASSERT_0x49,
    ASSERT_0x4a,
    ASSERT_0x4b,
    ASSERT_0x4c,
    ASSERT_0x4d,
    ASSERT_0x4e,
    ASSERT_0x4f,
    POP,
    MLOAD,
    MSTORE,
    MSTORE8,
    SLOAD,
    SSTORE,
    JUMP,
    JUMPI,
    PC,
    MSIZE,
    GAS,
    JUMPDEST,
    ASSERT_0x5c,
    ASSERT_0x5d,
    ASSERT_0x5e,
    ASSERT_0x5f,
    PUSH1,
    PUSH2,
    PUSH3,
    PUSH4,
    PUSH5,
    PUSH6,
    PUSH7,
    PUSH8,
    PUSH9,
    PUSH10,
    PUSH11,
    PUSH12,
    PUSH13,
    PUSH14,
    PUSH15,
    PUSH16,
    PUSH17,
    PUSH18,
    PUSH19,
    PUSH20,
    PUSH21,
    PUSH22,
    PUSH23,
    PUSH24,
    PUSH25,
    PUSH26,
    PUSH27,
    PUSH28,
    PUSH29,
    PUSH30,
    PUSH31,
    PUSH32,
    DUP1,
    DUP2,
    DUP3,
    DUP4,
    DUP5,
    DUP6,
    DUP7,
    DUP8,
    DUP9,
    DUP10,
    DUP11,
    DUP12,
    DUP13,
    DUP14,
    DUP15,
    DUP16,
    SWAP1,
    SWAP2,
    SWAP3,
    SWAP4,
    SWAP5,
    SWAP6,
    SWAP7,
    SWAP8,
    SWAP9,
    SWAP10,
    SWAP11,
    SWAP12,
    SWAP13,
    SWAP14,
    SWAP15,
    SWAP16,
    LOG0,
    LOG1,
    LOG2,
    LOG3,
    LOG4,
    ASSERT_0xa5,
    ASSERT_0xa6,
    ASSERT_0xa7,
    ASSERT_0xa8,
    ASSERT_0xa9,
    ASSERT_0xaa,
    ASSERT_0xab,
    ASSERT_0xac,
    ASSERT_0xad,
    ASSERT_0xae,
    ASSERT_0xaf,
    ASSERT_0xb0,
    ASSERT_0xb1,
    ASSERT_0xb2,
    ASSERT_0xb3,
    ASSERT_0xb4,
    ASSERT_0xb5,
    ASSERT_0xb6,
    ASSERT_0xb7,
    ASSERT_0xb8,
    ASSERT_0xb9,
    ASSERT_0xba,
    ASSERT_0xbb,
    ASSERT_0xbc,
    ASSERT_0xbd,
    ASSERT_0xbe,
    ASSERT_0xbf,
    ASSERT_0xc0,
    ASSERT_0xc1,
    ASSERT_0xc2,
    ASSERT_0xc3,
    ASSERT_0xc4,
    ASSERT_0xc5,
    ASSERT_0xc6,
    ASSERT_0xc7,
    ASSERT_0xc8,
    ASSERT_0xc9,
    ASSERT_0xca,
    ASSERT_0xcb,
    ASSERT_0xcc,
    ASSERT_0xcd,
    ASSERT_0xce,
    ASSERT_0xcf,
    ASSERT_0xd0,
    ASSERT_0xd1,
    ASSERT_0xd2,
    ASSERT_0xd3,
    ASSERT_0xd4,
    ASSERT_0xd5,
    ASSERT_0xd6,
    ASSERT_0xd7,
    ASSERT_0xd8,
    ASSERT_0xd9,
    ASSERT_0xda,
    ASSERT_0xdb,
    ASSERT_0xdc,
    ASSERT_0xdd,
    ASSERT_0xde,
    ASSERT_0xdf,
    ASSERT_0xe0,
    ASSERT_0xe1,
    ASSERT_0xe2,
    ASSERT_0xe3,
    ASSERT_0xe4,
    ASSERT_0xe5,
    ASSERT_0xe6,
    ASSERT_0xe7,
    ASSERT_0xe8,
    ASSERT_0xe9,
    ASSERT_0xea,
    ASSERT_0xeb,
    ASSERT_0xec,
    ASSERT_0xed,
    ASSERT_0xee,
    ASSERT_0xef,
    CREATE,
    CALL,
    CALLCODE,
    RETURN,
    DELEGATECALL,
    ASSERT_0xf5,
    ASSERT_0xf6,
    ASSERT_0xf7,
    ASSERT_0xf8,
    ASSERT_0xf9,
    STATICCALL,
    ASSERT_0xfb,
    ASSERT_0xfc,
    REVERT,
    INVALID,
    SELFDESTRUCT,
    NUM_OPCODES
} op_t;

extern const uint8_t argCount[NUM_OPCODES];
extern const uint8_t retCount[NUM_OPCODES];
